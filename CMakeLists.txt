cmake_minimum_required(VERSION 3.2)
set_property(GLOBAL PROPERTY USE_FOLDERS ON)
project(Programming-an-RTS)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin/")
set(CMAKE_POLICY_DEFAULT_CMP0077 NEW)
set(GLFW_BUILD_EXAMPLES OFF CACHE BOOL "")
set(GLFW_BUILD_TESTS OFF CACHE BOOL "")
set(GLFW_BUILD_DOCS OFF CACHE BOOL "")
set(GLFW_INSTALL OFF CACHE BOOL "")
set(ENABLE_GLSLANG_BINARIES  OFF  CACHE BOOL "")
set(ENABLE_HLSL              OFF  CACHE BOOL "")
set(ENABLE_CTEST             OFF  CACHE BOOL "")
set(ENABLE_OPT               OFF  CACHE BOOL "")
set(SKIP_GLSLANG_INSTALL     ON   CACHE BOOL "")
include_directories(ThirdParty)
include_directories(ThirdParty/stb)
include_directories(ThirdParty/glfw/include)
include_directories(ThirdParty/spdlog/include)
include_directories(ThirdParty/VulkanMemoryAllocator/include)
include_directories(ThirdParty/SPIRV-Reflect)
include_directories(ThirdParty/SPIRV-Reflect/include)
include_directories(ThirdParty/freetype/include)
include_directories(ThirdParty/assimp/)
include_directories(ThirdParty/assimp/include)
include_directories(build/ThirdParty/assimp/include)

add_subdirectory(ThirdParty)

find_package(Vulkan)
include_directories(AFTER ${Vulkan_INCLUDE_DIRS})
#include_directories(Vulkan_INCLUDE_DIRS)
if(WIN32)
	add_definitions(-D_CRT_SECURE_NO_WARNINGS -DVK_USE_PLATFORM_WIN32_KHR -DNOMINMAX)
endif()
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
link_libraries(${Vulkan_LIBRARY})
link_libraries(spirv-reflect-static)
add_subdirectory(common)
include_directories(common)
add_subdirectory(Programming-an-RTS)
#set(GLM_DIR "${CMAKE_SOURCE_DIR}/ThirdParty/glm")
#message("GLM dir: " "${GLM_DIR}")
#include_directories(INTERFACE "${GLM_DIR}") 
#set(GLSLANG_DIR "${CMAKE_SOURCE_DIR}/ThirdParty/glslang")
#message("GLSLANG_DIR" "${GLSLANG_DIR}")
#add_subdirectory("${GLSLANG_DIR}")
#include_directories(STATIC "${GLSLANG_DIR}")
#SET(SPIRV_REFLECT_DIR "${CMAKE_SOURCE_DIR}/ThirdParty/SPIRV-Reflect")
#message("SPIRV-Reflect DIR: " "${SPIRV_REFLECT_DIR}")
#add_subdirectory("${SPIRV_REFLECT_DIR}")
#include_directories(STATIC "${SPIRV_REFLECT_DIR}")
#set(OUTPUT_DIR "${CMAKE_SOURCE_DIR}/Output")
#message("Output dir:" "${OUTPUT_DIR}")
#file(MAKE_DIRECTORY "${OUTPUT_DIR}")
#set(BUILD_DIR "${CMAKE_SOURCE_DIR}/Build")
#file(MAKE_DIRECTORY "${BUILD_DIR}")